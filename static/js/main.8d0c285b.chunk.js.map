{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMesage/error.gif","components/errorMesage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","props","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","timeId","setTimeout","clearInterval","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","target","CharList","charList","onCharListLoaded","arr","item","onCharSelected","renderItems","Skeleton","CharInfo","charId","prevProps","skeleton","length","i","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d0c285b.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  _apiKey = 'apikey=bf4b1e02c75089ac0a385d34bb8e42bc'\n\n  getResource = async (url) => {\n    let res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n    }\n\n    return await res.json()\n  }\n\n  getAllCharacters = async () => {\n    const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`);\n    return res.data.results.map(this._transformCharacter)\n  }\n\n  getCharacter = async (id) => {\n    const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n    return this._transformCharacter(res.data.results[0])\n  }\n\n  _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    }\n  }\n}\n\nexport default MarvelService;","const Spinner = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}}\n         width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" >\n      <g transform=\"translate(80,50)\" >\n        <g transform=\"rotate(0)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.875s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\" >\n        <g transform=\"rotate(45)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.75s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(50,80)\" >\n        <g transform=\"rotate(90)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.625s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\" >\n        <g transform=\"rotate(135)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.5s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(20,50.00000000000001)\" >\n        <g transform=\"rotate(180)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.375s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\" >\n        <g transform=\"rotate(225)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.25s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(49.99999999999999,20)\" >\n        <g transform=\"rotate(270)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.125s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\" >\n        <g transform=\"rotate(315)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"0s\" ></animate >\n          </circle >\n        </g >\n      </g >\n    </svg >\n  )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n  return (\n    <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n  )\n};\n\nexport default ErrorMessage;","import {Component} from 'react'\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from \"../../services/MarvelService.js\";\nimport Spinner from \"../spinner/Spinner.js\";\nimport ErrorMessage from \"../errorMesage/ErrorMessage.js\";\n\nclass RandomChar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    char: {},\n    loading: true,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n    this.timeId= setTimeout(this.updateChar, 3000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeId)\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({char, loading: false})\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError)\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n\n    return (\n      <div className=\"randomchar\" >\n        {errorMessage}\n        {spinner}\n        {content}\n        <div className=\"randomchar__static\" >\n          <p className=\"randomchar__title\" >\n            Random character for today!<br />\n            Do you want to get to know him better?\n          </p >\n          <p className=\"randomchar__title\" >\n            Or choose another one\n          </p >\n          <button onClick={this.updateChar} className=\"button button__main\" >\n            <div className=\"inner\" >try it</div >\n          </button >\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n        </div >\n      </div >\n    )\n  }\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki} = char;\n  let imgStyle = {'objectFit' : 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {'objectFit' : 'contain'};\n  }\n\n\n  return (\n    <div className=\"randomchar__block\" >\n      <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n      <div className=\"randomchar__info\" >\n        <p className=\"randomchar__name\" >{name}</p >\n        <p className=\"randomchar__descr\" >\n          {description}\n        </p >\n        <div className=\"randomchar__btns\" >\n          <a href={homepage} target=\"_blank\" className=\"button button__main\" >\n            <div className=\"inner\" >homepage</div >\n          </a >\n          <a href={wiki} target=\"_blank\" className=\"button button__secondary\" >\n            <div className=\"inner\" >Wiki</div >\n          </a >\n        </div >\n      </div >\n    </div >\n  )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMesage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n  state = {\n    charList: [],\n    loading: true,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.marvelService.getAllCharacters()\n      .then(this.onCharListLoaded)\n      .catch(this.onError)\n  }\n\n  onCharListLoaded = (charList) => {\n    this.setState({\n      charList,\n      loading: false\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  renderItems(arr) {\n    const items =  arr.map((item) => {\n      let imgStyle = {'objectFit' : 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          onClick={() => this.props.onCharSelected(item.id)}>\n          <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      )\n    });\n\n    return (\n      <ul className=\"char__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  render() {\n\n    const {charList, loading, error} = this.state;\n\n    const items = this.renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n      <div className=\"char__list\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <button className=\"button button__main button__long\">\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMesage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n  state = {\n    char: null,\n    loading: false,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const {charId} = this.props;\n    if (!charId) {\n      return;\n    }\n\n    this.onCharLoading();\n\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({\n      char,\n      loading: false\n    })\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"char__info\" >\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div >\n    )\n  }\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n  let imgStyle = {'objectFit': 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {'objectFit': 'contain'};\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\" >\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div >\n          <div className=\"char__info-name\" >{name}</div >\n          <div className=\"char__btns\" >\n            <a href={homepage} target=\"_blank\" className=\"button button__main\" >\n              <div className=\"inner\" >homepage</div >\n            </a >\n            <a href={wiki} target=\"_blank\" className=\"button button__secondary\" >\n              <div className=\"inner\" >Wiki</div >\n            </a >\n          </div >\n        </div >\n      </div >\n      <div className=\"char__descr\" >\n        {description}\n      </div >\n      <div className=\"char__comics\" >Comics:</div >\n      <ul className=\"char__comics-list\" >\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {\n          comics.slice(0,10).map((item, i) => {\n            return (\n              <li key={i} className=\"char__comics-item\" >\n                {item.name}\n              </li >\n            )\n          })\n        }\n      </ul >\n    </>\n  )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n  state = {\n    selectedChar: null,\n  }\n\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\" >\n        <AppHeader />\n        <main >\n          <RandomChar />\n          <div className=\"char__content\" >\n            <CharList onCharSelected={this.onCharSelected}/>\n            <CharInfo charId={this.state.selectedChar} />\n          </div >\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </main >\n      </div >\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}