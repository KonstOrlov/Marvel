{"version":3,"sources":["components/errorMesage/error.gif","components/errorMesage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/spinner/Spinner.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/singleComicLayout/SingleComicLayout.js","components/pages/singleCharacterLayout/SingleCharacterLayout.js","components/pages/SinglePage.js","components/pages/404.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","useMarvelService","useState","loading","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","name","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","renderItems","disabled","prorTypes","PropTypes","func","isRequired","Skeleton","target","length","CharInfo","charId","skeleton","CharSearchForm","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","placeholder","MainPage","selectedChar","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","ComicsPage","SingleComicLayout","SingleCharacterLayout","SinglePage","dataType","useParams","setData","updateData","onDataLoaded","Page404","AppHeader","end","color","isActive","App","fallback","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kXAAe,MAA0B,kC,OCQ1BA,EANM,WACnB,OACE,qBAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAYC,IAAKC,EAAKC,IAAI,WCoB7GC,EArBI,iKAGhB,OAHgB,oCACjBC,MAAQ,CACNC,OAAO,GACR,EAeA,OAfA,8CAED,SAAkBA,EAAOC,GACvBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CACZL,OAAO,MAEV,oBAED,WACE,OAAII,KAAKL,MAAMC,MACN,cAAC,EAAY,IAGfI,KAAKE,MAAMC,aACnB,EAlBgB,CAASC,aCqFbC,EAxFC,WACd,OACE,sBAAKC,MAAM,6BAA6BrB,MAAO,CAACK,OAAQ,SAAUiB,WAAY,OAAQrB,QAAS,SAC1FC,MAAM,QAAQC,OAAO,QAAQoB,QAAQ,cAAcC,oBAAoB,WAAU,UACpF,mBAAGC,UAAU,mBAAkB,SAC7B,mBAAGA,UAAU,YAAW,SACtB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAG,UACxD,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MACrFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,mBAIrB,mBAAGR,UAAU,iDAAgD,SAC3D,mBAAGA,UAAU,aAAY,SACvB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC5D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MACpFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,kBAIrB,mBAAGR,UAAU,mBAAkB,SAC7B,mBAAGA,UAAU,aAAY,SACvB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAM,UAC3D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MACrFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,mBAIrB,mBAAGR,UAAU,kDAAiD,SAC5D,mBAAGA,UAAU,cAAa,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC5D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MACnFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,iBAIrB,mBAAGR,UAAU,kCAAiC,SAC5C,mBAAGA,UAAU,cAAa,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAK,UAC1D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MACrFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,mBAIrB,mBAAGR,UAAU,kDAAiD,SAC5D,mBAAGA,UAAU,cAAa,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC5D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MACpFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,kBAIrB,mBAAGR,UAAU,kCAAiC,SAC5C,mBAAGA,UAAU,cAAa,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAM,UAC3D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MACrFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,mBAIrB,mBAAGR,UAAU,iDAAgD,SAC3D,mBAAGA,UAAU,cAAa,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC5D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAChFC,IAAI,KAAKC,YAAY,eACvC,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MACpFD,MAAM,kB,uBCVZK,EApEU,WACvB,MCDqB,WACrB,MAA8BC,oBAAS,GAAM,mBAAtCC,EAAO,KAAEC,EAAU,KAC1B,EAA0BF,mBAAS,MAAK,mBAAjC5B,EAAK,KAAE+B,EAAQ,KA6BtB,MAAO,CACLF,UACA7B,QACAgC,QA9BcC,sBAAW,uCAAC,WAC1BC,GAAG,2FAMc,OALjBC,EAAM,+BAAG,MACTC,EAAI,+BAAG,KACPC,EAAO,+BAAG,CACR,eAAgB,oBAElBP,GAAW,GAAM,kBAEQQ,MAAMJ,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,sBACR,IAAIC,MAAM,mBAAD,OAAoBP,EAAG,qBAAaK,EAASG,SAAS,yBAGpDH,EAASI,OAAO,KAAD,GAChB,OADZC,EAAI,OACVd,GAAW,GAAO,kBACXc,GAAI,QAGS,MAHT,0BAEXd,GAAW,GACXC,EAAS,KAAEc,SAAS,+DAGvB,mDAvB0B,GAuBxB,IAQDC,WANiBb,uBAAY,kBAAMF,EAAS,QAAO,KD5BPgB,GAAvClB,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAOgC,EAAO,EAAPA,QAASc,EAAU,EAAVA,WAE1BE,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,uCAAG,0CAAAC,EAAA,sDAA2B,OAApBC,EAAM,+BAFlB,IAEgC,SAChCpB,EAAQ,GAAD,OAAIgB,EAAQ,qCAA6BI,EAAM,YAAIH,IAAW,KAAD,EAA7E,OAAHI,EAAG,yBACFA,EAAIT,KAAKU,QAAQC,IAAIC,IAAoB,2CACjD,kBAHqB,mCAKhBC,EAAY,uCAAG,WAAOC,GAAE,uFACV1B,EAAQ,GAAD,OAAIgB,EAAQ,sBAAcU,EAAE,YAAIT,IAAW,KAAD,EAA1D,OAAHI,EAAG,yBACFG,EAAoBH,EAAIT,KAAKU,QAAQ,KAAG,2CAChD,gBAHiB,sCAKZK,EAAkB,uCAAG,WAAOC,GAAI,uFAClB5B,EAAQ,GAAD,OAAIgB,EAAQ,2BAAmBY,EAAI,YAAIX,IAAW,KAAD,EAAjE,OAAHI,EAAG,yBACFA,EAAIT,KAAKU,QAAQC,IAAIC,IAAoB,2CACjD,gBAHuB,sCAKlBK,EAAY,uCAAG,0CAAAV,EAAA,sDAAiB,OAAVC,EAAM,+BAAG,EAAC,SAClBpB,EAAQ,GAAD,OAAIgB,EAAQ,qDAA6CI,EAAM,YAAIH,IAAW,KAAD,EAA7F,OAAHI,EAAG,yBACFA,EAAIT,KAAKU,QAAQC,IAAIO,IAAiB,2CAC9C,kBAHiB,mCAKZC,EAAQ,uCAAG,WAAOL,GAAE,uFACN1B,EAAQ,GAAD,OAAIgB,EAAQ,kBAAUU,EAAE,YAAIT,IAAW,KAAD,EAAtD,OAAHI,EAAG,yBACFS,EAAiBT,EAAIT,KAAKU,QAAQ,KAAG,2CAC7C,gBAHa,sCAKRE,EAAsB,SAACQ,GAC3B,MAAO,CACLN,GAAIM,EAAKN,GACTE,KAAMI,EAAKJ,KACXK,YAAaD,EAAKC,YAAW,UAAMD,EAAKC,YAAYC,MAAM,EAAG,KAAI,OAAQ,6CACzEC,UAAWH,EAAKG,UAAUC,KAAO,IAAMJ,EAAKG,UAAUE,UACtDC,SAAUN,EAAKO,KAAK,GAAGrC,IACvBsC,KAAMR,EAAKO,KAAK,GAAGrC,IACnBuC,OAAQT,EAAKS,OAAOC,QAIlBZ,EAAmB,SAACW,GACxB,MAAO,CACLf,GAAIe,EAAOf,GACXiB,MAAOF,EAAOE,MACdV,YAAaQ,EAAOR,aAAe,0BACnCW,UAAWH,EAAOG,UAAS,UAAMH,EAAOG,UAAS,OAAQ,2CACzDT,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DQ,SAAUJ,EAAOK,YAAYD,UAAY,QACzCE,MAAON,EAAOO,OAAOD,MAAK,UAAMN,EAAOO,OAAOD,MAAK,KAAM,kBAI7D,MAAO,CACLlD,UACA7B,QACA8C,aACAI,mBACAO,eACAE,qBACAE,eACAE,aElEW,G,MAAA,IAA0B,qCC4DnCkB,EAAO,SAAH,GAAgB,IAAXjB,EAAI,EAAJA,KACb,GAAIA,EAAM,CACR,IAAOJ,EAAgDI,EAAhDJ,KAAMK,EAA0CD,EAA1CC,YAAaE,EAA6BH,EAA7BG,UAAWG,EAAkBN,EAAlBM,SAAUE,EAAQR,EAARQ,KAE3CU,EAAW,CAAC,UAAa,SAK7B,MAJkB,wEAAdf,IACFe,EAAW,CAAC,UAAa,YAIzB,sBAAKC,UAAU,oBAAmB,UAChC,qBAAKxF,IAAKwE,EAAWtE,IAAI,mBAAmBsF,UAAU,kBAAkB9F,MAAO6F,IAC/E,sBAAKC,UAAU,mBAAkB,UAC/B,mBAAGA,UAAU,mBAAkB,SAAGvB,IAClC,mBAAGuB,UAAU,oBAAmB,SAC7BlB,IAEH,sBAAKkB,UAAU,mBAAkB,UAC/B,mBAAGC,KAAMd,EAAUa,UAAU,sBAAqB,SAChD,qBAAKA,UAAU,QAAO,wBAExB,mBAAGC,KAAMZ,EAAMW,UAAU,2BAA0B,SACjD,qBAAKA,UAAU,QAAO,6BAQlC,OAAO,MAGME,EApFI,WACjB,MAAwBzD,mBAAS,MAAK,mBAA/BoC,EAAI,KAAEsB,EAAO,KACpB,EAAmD3D,IAA5CE,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAOyD,EAAY,EAAZA,aAAcX,EAAU,EAAVA,WAErCyC,qBAAU,WACRC,IAEA,IAAMC,EAAUC,YAAYF,EAAY,MAExC,OAAO,WACLG,cAAcF,MAEf,IAEH,IAAMG,EAAe,SAAC5B,GACpBsB,EAAQtB,IAGJwB,EAAa,WACjB1C,IACA,IAAMY,EAAKmC,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAC5DtC,EAAaC,GACVsC,KAAKJ,IAGJK,EAAejG,EAAQ,cAAC,EAAY,IAAM,KAC1CkG,EAAUrE,EAAU,cAAC,EAAO,IAAM,KAClCsE,EAAYtE,GAAW7B,EAAgC,KAAvB,cAAC,EAAI,CAACgE,KAAMA,IAElD,OACE,sBAAKmB,UAAU,aAAY,UACxBc,EACAC,EACAC,EACD,sBAAKhB,UAAU,qBAAoB,UACjC,oBAAGA,UAAU,oBAAmB,wCACH,uBAAM,4CAGnC,mBAAGA,UAAU,oBAAmB,mCAGhC,wBAAQiB,QAASZ,EAAYL,UAAU,sBAAqB,SAC1D,qBAAKA,UAAU,QAAO,sBAExB,qBAAKxF,IAAK0G,EAASxG,IAAI,UAAUsF,UAAU,kC,0CC5C7CmB,G,MAAW,SAAChG,GAEhB,MAAgCsB,mBAAS,IAAG,mBAArC2E,EAAQ,KAAEC,EAAW,KAC5B,EAA4C5E,oBAAS,GAAM,mBAApD6E,EAAc,KAAEC,EAAiB,KACxC,EAA4B9E,mBAAS,KAAI,mBAAlCwB,EAAM,KAAEuD,EAAS,KACxB,EAAkC/E,oBAAS,GAAM,mBAA1CgF,EAAS,KAAEC,EAAY,KAE9B,EAA2ClF,IAApCE,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAOkD,EAAgB,EAAhBA,iBAEvBqC,qBAAU,WACRuB,EAAU1D,GAAQ,KACjB,IAEH,IAAM0D,EAAY,SAAC1D,EAAQ2D,GACfL,GAAVK,GACA7D,EAAiBE,GACd4C,KAAKgB,IAGJA,EAAmB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAc,IAChBC,GAAQ,GAGVV,GAAY,SAAAD,GAAQ,4BAAQA,GAAQ,YAAKU,OACzCP,GAAkB,GAClBC,GAAU,SAAAvD,GAAM,OAAIA,EAAS,KAC7ByD,EAAaK,IAGTC,EAAWC,iBAAO,IAElBC,EAAc,SAAC3D,GACnByD,EAASG,QAAQC,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,0BACvDP,EAASG,QAAQ5D,GAAI+D,UAAUE,IAAI,uBACnCR,EAASG,QAAQ5D,GAAIkE,SA0CvB,IAAMlD,EAvCN,SAAqBmD,GACnB,IAAMnD,EAAQmD,EAAItE,KAAI,SAACiE,EAAMM,GAC3B,IAAI5C,EAAW,CAAC,UAAa,SAK7B,MAJuB,wEAAnBsC,EAAKrD,YACPe,EAAW,CAAC,UAAa,UAIzB,cAAC6C,EAAA,EAAa,CAAeC,QAAS,IAAKC,WAAW,aAAY,SAChE,qBACE9C,UAAU,aACV+C,SAAU,EACVC,IAAK,SAAAC,GAAE,OAAIjB,EAASG,QAAQQ,GAAKM,GACjChC,QAAS,WACP9F,EAAM+H,eAAeb,EAAK9D,IAC1B2D,EAAYS,IAEdQ,WAAY,SAACC,GACG,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACrBlI,EAAM+H,eAAeb,EAAK9D,IAC1B2D,EAAYS,KAEd,UACF,qBAAKnI,IAAK6H,EAAKrD,UAAWtE,IAAK2H,EAAK5D,KAAMvE,MAAO6F,IACjD,qBAAKC,UAAU,aAAY,SAAGqC,EAAK5D,WAhBnB4D,EAAK9D,OAsB7B,OACE,oBAAIyB,UAAU,aAAY,SACxB,cAACsD,EAAA,EAAe,CAACC,UAAW,KAAK,SAC9BhE,MAMKiE,CAAYpC,GAEpBN,EAAejG,EAAQ,cAAC,EAAY,IAAM,KAC1CkG,EAAUrE,IAAY4E,EAAiB,cAAC,EAAO,IAAM,KAE3D,OACE,sBAAKtB,UAAU,aAAY,UACxBc,EACAC,EACAxB,EACD,wBAAQS,UAAU,mCACVyD,SAAUnC,EACVpH,MAAO,CAACC,QAASsH,EAAY,OAAS,SACtCR,QAAS,kBAAMU,EAAU1D,IAAQ,SAEvC,qBAAK+B,UAAU,QAAO,8BAM9BmB,EAASuC,UAAY,CACnBR,eAAgBS,IAAUC,KAAKC,YAGlB1C,QC9FA2C,G,MAjBE,WACb,OACI,qCACI,mBAAG9D,UAAU,eAAc,0DAC3B,sBAAKA,UAAU,WAAU,UACrB,sBAAKA,UAAU,yBAAwB,UACnC,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCuCzBF,G,OAAO,SAAH,GAAgB,IAAXjB,EAAI,EAAJA,KACNJ,EAAwDI,EAAxDJ,KAAMK,EAAkDD,EAAlDC,YAAaE,EAAqCH,EAArCG,UAAWG,EAA0BN,EAA1BM,SAAUE,EAAgBR,EAAhBQ,KAAMC,EAAUT,EAAVS,OAEjDS,EAAW,CAAC,UAAa,SAK7B,MAJkB,wEAAdf,IACFe,EAAW,CAAC,UAAa,YAIzB,qCACE,sBAAKC,UAAU,eAAc,UAC3B,qBAAKxF,IAAKwE,EAAWtE,IAAK+D,EAAMvE,MAAO6F,IACvC,gCACE,qBAAKC,UAAU,kBAAiB,SAAGvB,IACnC,sBAAKuB,UAAU,aAAY,UACzB,mBAAGC,KAAMd,EAAU4E,OAAO,SAAS/D,UAAU,sBAAqB,SAChE,qBAAKA,UAAU,QAAO,wBAExB,mBAAGC,KAAMZ,EAAM0E,OAAO,SAAS/D,UAAU,2BAA0B,SACjE,qBAAKA,UAAU,QAAO,6BAK9B,qBAAKA,UAAU,cAAa,SACzBlB,IAEH,qBAAKkB,UAAU,eAAc,qBAC7B,qBAAIA,UAAU,oBAAmB,UAC9BV,EAAO0E,OAAS,EAAI,KAAO,yCAE1B1E,EAAOP,MAAM,EAAG,IAAIX,KAAI,SAACiE,EAAMM,GAC7B,OACE,oBAAY3C,UAAU,oBAAmB,SACtCqC,EAAK5D,MADCkE,cAeRsB,EA1FE,SAAC9I,GAEhB,MAAwBsB,mBAAS,MAAK,mBAA/BoC,EAAI,KAAEsB,EAAO,KAEpB,EAAmD3D,IAA5CE,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAOyD,EAAY,EAAZA,aAAcX,EAAU,EAAVA,WAErCyC,qBAAU,WACRC,MACC,CAAClF,EAAM+I,SAGV,IAAM7D,EAAa,WACjB1C,IAEA,IAAOuG,EAAU/I,EAAV+I,OACFA,GAIL5F,EAAa4F,GACVrD,KAAKJ,IAGJA,EAAe,SAAC5B,GACpBsB,EAAQtB,IAGJsF,EAAWtF,GAAQnC,GAAW7B,EAAQ,KAAO,cAAC,EAAQ,IACtDiG,EAAejG,EAAQ,cAAC,EAAY,IAAM,KAC1CkG,EAAUrE,EAAU,cAAC,EAAO,IAAM,KAClCsE,EAAYtE,GAAW7B,IAAUgE,EAA+B,KAAvB,cAAC,EAAI,CAACA,KAAMA,IAE3D,OACE,sBAAKmB,UAAU,aAAY,UACxBmE,EACArD,EACAC,EACAC,M,gBC2BQoD,G,OAhEQ,WACrB,MAAwB3H,mBAAS,MAAK,mBAA/BoC,EAAI,KAAEsB,EAAO,KACpB,EAAyD3D,IAAlDE,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAO2D,EAAkB,EAAlBA,mBAAoBb,EAAU,EAAVA,WAErC8C,EAAe,SAAC5B,GACpBsB,EAAQtB,IAUJiC,EAAejG,EAAQ,qBAAKmF,UAAU,8BAA6B,SAAE,cAAC,EAAY,MAAa,KAC/F7B,EAAWU,EAAcA,EAAKmF,OAAS,EAC3C,sBAAKhE,UAAU,uBAAsB,UACnC,sBAAKA,UAAU,uBAAsB,6BAAmBnB,EAAK,GAAGJ,KAAI,YACpE,cAAC,IAAI,CAAC4F,GAAE,6BAAwBxF,EAAK,GAAGN,IAAMyB,UAAU,2BAA0B,SAChF,qBAAKA,UAAU,QAAO,0BAG1B,qBAAKA,UAAU,qBAAoB,uEAPb,KAWxB,OACE,sBAAKA,UAAU,oBAAmB,UAChC,cAAC,IAAM,CACLsE,cAAe,CACbC,SAAU,IAEZC,iBAAkBC,IAAW,CAC3BF,SAAUE,MAAaC,SAAS,4BAElCC,SAAU,YAAiB,IA5BblG,EA4BF8F,EAAQ,EAARA,SA5BE9F,EA6BD8F,EA5BjB5G,IAEAa,EAAmBC,GAChBoC,KAAKJ,IA0BF,SAEF,eAAC,IAAI,WACH,uBAAOT,UAAU,qBAAqB4E,QAAQ,WAAU,0CACxD,sBAAK5E,UAAU,uBAAsB,UACnC,cAAC,IAAK,CACJzB,GAAG,WACHE,KAAK,WACLvC,KAAK,OACL2I,YAAY,eACd,wBACE3I,KAAK,SACL8D,UAAU,sBACVyD,SAAU/G,EAAQ,SAClB,qBAAKsD,UAAU,QAAO,uBAG1B,cAAC,IAAkB,CAACuD,UAAU,MAAMvD,UAAU,qBAAqBvB,KAAK,kBAG3EN,EACA2C,OChCQgE,EA7BE,WACf,MAAgCrI,mBAAS,MAAK,mBAAvCsI,EAAY,KAAE5E,EAAO,KAM5B,OACE,qCACE,cAAC,EAAa,UACZ,cAAC,EAAU,MAEb,sBAAKH,UAAU,gBAAe,UAC5B,cAAC,EAAa,UACZ,cAAC,EAAQ,CAACkD,eAXK,SAAC3E,GACtB4B,EAAQ5B,QAYJ,gCACE,cAAC,EAAa,UACZ,cAAC,EAAQ,CAAC2F,OAAQa,MAEpB,cAAC,EAAa,UACZ,cAAC,EAAc,gBC7BZ,G,OAAA,IAA0B,sCCA1B,MAA0B,0CCiB1BC,EAbG,WACd,OACI,sBAAKhF,UAAU,cAAa,UACxB,qBAAKxF,IAAKyK,EAAUvK,IAAI,aACxB,sBAAKsF,UAAU,mBAAkB,mCACP,uBAAK,iBAG/B,qBAAKxF,IAAK0K,EAAcxK,IAAI,sBCoEzByK,G,OAvEI,WAEjB,MAAoC1I,mBAAS,IAAG,mBAAzC2I,EAAU,KAAEC,EAAa,KAChC,EAA4C5I,oBAAS,GAAM,mBAApD6E,EAAc,KAAEC,EAAiB,KACxC,EAA4B9E,mBAAS,GAAE,mBAAhCwB,EAAM,KAAEuD,EAAS,KACxB,EAAsC/E,oBAAS,GAAM,mBAA9C6I,EAAW,KAAEC,EAAc,KAElC,EAAuC/I,IAAhCE,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAO6D,EAAY,EAAZA,aAEvB0B,qBAAU,WACRuB,EAAU1D,GAAQ,KACjB,IAEH,IAAM0D,EAAY,SAAC1D,EAAQ2D,GACfL,GAAVK,GACAlD,EAAaT,GACV4C,KAAK2E,IAGJA,EAAqB,SAACC,GAC1B,IAAI1D,GAAQ,EACR0D,EAAczB,OAAS,IACzBjC,GAAQ,GAEVsD,EAAc,GAAD,mBAAKD,GAAU,YAAKK,KACjClE,GAAkB,GAClBC,EAAUvD,EAAS,GACnBsH,EAAexD,IAuBjB,IAAMxC,EApBN,SAAqBmD,GACnB,IAAMnD,EAAQmD,EAAItE,KAAI,SAACiE,EAAMM,GAC3B,OACE,oBAAI3C,UAAU,eAAc,SAC1B,eAAC,IAAI,CAACqE,GAAE,yBAAoBhC,EAAK9D,IAAK,UACpC,qBAAK/D,IAAK6H,EAAKrD,UAAWtE,IAAK2H,EAAK7C,MAAOQ,UAAU,qBACrD,qBAAKA,UAAU,oBAAmB,SAAGqC,EAAK7C,QAC1C,qBAAKQ,UAAU,qBAAoB,SAAGqC,EAAKzC,YAJb+C,MAUtC,OACE,oBAAI3C,UAAU,eAAc,SACzBT,IAKOiE,CAAY4B,GAEpBtE,EAAejG,EAAQ,cAAC,EAAY,IAAM,KAC1CkG,EAAUrE,IAAY4E,EAAiB,cAAC,EAAO,IAAM,KAE3D,OACE,sBAAKtB,UAAU,eAAc,UAC1Bc,EACAC,EACAxB,EACD,wBACEkE,SAAUnC,EACVpH,MAAO,CAAC,QAAWoL,EAAc,OAAS,SAC1CtF,UAAU,mCACViB,QAAS,kBAAMU,EAAU1D,IAAQ,SACjC,qBAAK+B,UAAU,QAAO,8BC9Df0F,EATI,WACjB,OACE,qCACE,cAAC,EAAS,IACV,cAAC,EAAU,QCgBFC,G,OAnBW,SAAH,GAAgB,IAAXlI,EAAI,EAAJA,KAEnB+B,EAA6D/B,EAA7D+B,MAAOV,EAAsDrB,EAAtDqB,YAAaW,EAAyChC,EAAzCgC,UAAWT,EAA8BvB,EAA9BuB,UAAWU,EAAmBjC,EAAnBiC,SAAUE,EAASnC,EAATmC,MAE3D,OACE,sBAAKI,UAAU,eAAc,UAC3B,qBAAKxF,IAAKwE,EAAWtE,IAAK8E,EAAOQ,UAAU,sBAC3C,sBAAKA,UAAU,qBAAoB,UACjC,oBAAIA,UAAU,qBAAoB,SAAER,IACpC,mBAAGQ,UAAU,sBAAqB,SAAElB,IACpC,mBAAGkB,UAAU,sBAAqB,SAAEP,IACpC,oBAAGO,UAAU,sBAAqB,uBAAYN,KAC9C,qBAAKM,UAAU,sBAAqB,SAAEJ,OAExC,cAAC,IAAI,CAACyE,GAAG,iBAAiBrE,UAAU,qBAAoB,8BCD/C4F,G,OAfe,SAAH,GAAgB,IAAXnI,EAAI,EAAJA,KAEvBgB,EAAgChB,EAAhCgB,KAAMK,EAA0BrB,EAA1BqB,YAAaE,EAAavB,EAAbuB,UAE1B,OACE,sBAAKgB,UAAU,eAAc,UAC3B,qBAAKxF,IAAKwE,EAAWtE,IAAK+D,EAAMuB,UAAU,2BAC1C,sBAAKA,UAAU,qBAAoB,UACjC,oBAAIA,UAAU,qBAAoB,SAAEvB,IACpC,mBAAGuB,UAAU,sBAAqB,SAAElB,YCoC7B+G,EAvCI,SAAH,GAA+B,IAA1BxK,EAAS,EAATA,UAAWyK,EAAQ,EAARA,SACvBvH,EAAMwH,cAANxH,GACP,EAAwB9B,mBAAS,MAAK,mBAA/BgB,EAAI,KAAEuI,EAAO,KACpB,EAA6DxJ,IAAtDE,EAAO,EAAPA,QAAS7B,EAAK,EAALA,MAAO+D,EAAQ,EAARA,SAAUN,EAAY,EAAZA,aAAcX,EAAU,EAAVA,WAE/CyC,qBAAU,WACR6F,MACC,CAAC1H,IAEJ,IAAM0H,EAAa,WAGjB,OAFAtI,IAEQmI,GACN,IAAK,QACHlH,EAASL,GAAIsC,KAAKqF,GAClB,MACF,IAAK,YACH5H,EAAaC,GAAIsC,KAAKqF,KAItBA,EAAe,SAACzI,GACpBuI,EAAQvI,IAGJqD,EAAejG,EAAQ,cAAC,EAAY,IAAK,KACzCkG,EAAUrE,EAAU,cAAC,EAAO,IAAK,KACjCsE,EAAYtE,GAAW7B,IAAU4C,EAAmC,KAA3B,cAACpC,EAAS,CAACoC,KAAMA,IAEhE,OACE,qCACE,cAAC,EAAS,IACTqD,EACAC,EACAC,MClBQmF,EApBC,WACd,OACE,gCACE,cAAC,EAAY,IACb,mBAAGjM,MAAO,CAAC,UAAa,SAAU,WAAc,OAAQ,SAAY,QAAQ,gCAG5E,cAAC,IAAI,CAACA,MAAO,CACX,QAAW,QACX,UAAa,SACb,WAAc,OACd,SAAY,OACZ,UAAa,QACZmK,GAAG,UAAS,mCCyBN+B,G,OAtCG,WAChB,OACE,yBAAQpG,UAAU,cAAa,UAC7B,oBAAIA,UAAU,aAAY,SACxB,eAAC,IAAI,CAACqE,GAAG,UAAS,UAChB,0CAAqB,2BAGzB,qBAAKrE,UAAU,YAAW,SACxB,+BACE,6BACE,cAAC,IAAO,CACNqG,KAAG,EACHhC,GAAG,UACHnK,MAAO,YAAU,MAAO,CACtBoM,MADe,EAARC,SACW,UAAY,YAC7B,0BAID,IAEN,6BACE,cAAC,IAAO,CACNlC,GAAG,iBACHnK,MAAO,YAAU,MAAO,CACtBoM,MADe,EAARC,SACW,UAAY,YAC7B,gCCGFC,EA1BH,WAEV,OACE,cAAC,IAAM,UACL,sBAAKxG,UAAU,MAAK,UAClB,cAAC,EAAS,IACV,+BACE,cAAC,WAAQ,CAACyG,SAAU,cAAC,EAAO,IAAI,SAC9B,eAAC,IAAM,WACL,cAAC,IAAK,CAACxH,KAAK,UAAUyH,QAAS,cAAC,EAAQ,MACxC,cAAC,IAAK,CAACzH,KAAK,iBAAiByH,QAAS,cAAC,EAAU,MACjD,cAAC,IAAK,CAACzH,KAAK,qBAAqByH,QAC/B,cAAC,EAAU,CAACrL,UAAWsK,EAAmBG,SAAS,YAErD,cAAC,IAAK,CAAC7G,KAAK,yBAAyByH,QACnC,cAAC,EAAU,CAACrL,UAAWuK,EAAuBE,SAAS,gBAEzD,cAAC,IAAK,CAAC7G,KAAK,IAAIyH,QAAS,cAAC,EAAO,mB,OCnB/CC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,U","file":"static/js/main.10df3923.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n  return (\n    <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n  )\n};\n\nexport default ErrorMessage;","import {Component} from \"react\";\nimport ErrorMessage from \"../errorMesage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true\n    })\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","const Spinner = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}}\n         width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" >\n      <g transform=\"translate(80,50)\" >\n        <g transform=\"rotate(0)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.875s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\" >\n        <g transform=\"rotate(45)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.75s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(50,80)\" >\n        <g transform=\"rotate(90)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.625s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\" >\n        <g transform=\"rotate(135)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.5s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(20,50.00000000000001)\" >\n        <g transform=\"rotate(180)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.375s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\" >\n        <g transform=\"rotate(225)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.25s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(49.99999999999999,20)\" >\n        <g transform=\"rotate(270)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"-0.125s\" ></animate >\n          </circle >\n        </g >\n      </g >\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\" >\n        <g transform=\"rotate(315)\" >\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\" >\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\"\n                              dur=\"1s\" repeatCount=\"indefinite\" ></animateTransform >\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\"\n                     begin=\"0s\" ></animate >\n          </circle >\n        </g >\n      </g >\n    </svg >\n  )\n}\n\nexport default Spinner;","import {useHttp} from \"../hooks/http.hook.js\";\n\nconst useMarvelService = () => {\n  const {loading, error, request, clearError} = useHttp();\n\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=bf4b1e02c75089ac0a385d34bb8e42bc';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter)\n  }\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    return _transformCharacter(res.data.results[0])\n  }\n\n  const getCharacterByName = async (name) => {\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  }\n\n  const getAllComics = async (offset = 0) => {\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n    return res.data.results.map(_transformComics);\n  }\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    return _transformComics(res.data.results[0]);\n  }\n\n  const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    }\n  }\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us',\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n    }\n  }\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacter,\n    getCharacterByName,\n    getAllComics,\n    getComic\n  }\n}\n\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const request = useCallback(async (\n    url,\n    method = 'GET',\n    body = null,\n    headers = {\n      \"Content-type\": \"application/json\"\n    }) => {\n    setLoading(true);\n    try {\n      const response = await fetch(url, {method, body, headers});\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`)\n      }\n\n      const data = await response.json();\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, [])\n\n  const clearError = useCallback(() => setError(null), [])\n\n  return {\n    loading,\n    error,\n    request,\n    clearError\n  }\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useEffect, useState} from 'react'\n\nimport Spinner from \"../spinner/Spinner.js\";\nimport ErrorMessage from \"../errorMesage/ErrorMessage.js\";\nimport useMarvelService from \"../../services/MarvelService.js\";\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n\n    const timerId = setInterval(updateChar, 15000);\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [])\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id)\n      .then(onCharLoaded)\n  }\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"randomchar\" >\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\" >\n        <p className=\"randomchar__title\" >\n          Random character for today!<br />\n          Do you want to get to know him better?\n        </p >\n        <p className=\"randomchar__title\" >\n          Or choose another one\n        </p >\n        <button onClick={updateChar} className=\"button button__main\" >\n          <div className=\"inner\" >try it</div >\n        </button >\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div >\n    </div >\n  )\n}\n\nconst View = ({char}) => {\n  if (char) {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let imgStyle = {'objectFit': 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n      imgStyle = {'objectFit': 'contain'};\n    }\n\n    return (\n      <div className=\"randomchar__block\" >\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\n        <div className=\"randomchar__info\" >\n          <p className=\"randomchar__name\" >{name}</p >\n          <p className=\"randomchar__descr\" >\n            {description}\n          </p >\n          <div className=\"randomchar__btns\" >\n            <a href={homepage} className=\"button button__main\" >\n              <div className=\"inner\" >homepage</div >\n            </a >\n            <a href={wiki} className=\"button button__secondary\" >\n              <div className=\"inner\" >Wiki</div >\n            </a >\n          </div >\n        </div >\n      </div >\n    )\n  }\n\n  return null;\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from \"prop-types\";\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMesage/ErrorMessage';\n\nimport './charList.scss';\nimport useMarvelService from \"../../services/MarvelService\";\n\nconst CharList = (props) => {\n\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const {loading, error, getAllCharacters} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true)\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true)\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n  }\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList < 9) {\n      ended = true;\n    }\n\n    setCharList(charList => [...charList, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset(offset => offset + 9);\n    setCharEnded(ended);\n  }\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  }\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {'objectFit': 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'unset'};\n      }\n\n      return (\n        <CSSTransition key={item.id} timeout={700} classNames=\"char__item\" >\n          <li\n            className=\"char__item\"\n            tabIndex={0}\n            ref={el => itemRefs.current[i] = el}\n            onClick={() => {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }}\n            onKeyPress={(e) => {\n              if (e.key === ' ' || e.key === \"Enter\") {\n                props.onCharSelected(item.id);\n                focusOnItem(i);\n              }\n            }} >\n            <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n            <div className=\"char__name\" >{item.name}</div >\n          </li >\n        </CSSTransition >\n      )\n    });\n\n    return (\n      <ul className=\"char__grid\" >\n        <TransitionGroup component={null}>\n          {items}\n        </TransitionGroup>\n      </ul >\n    )\n  }\n\n  const items = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"char__list\" >\n      {errorMessage}\n      {spinner}\n      {items}\n      <button className=\"button button__main button__long\"\n              disabled={newItemLoading}\n              style={{display: charEnded ? 'none' : 'block'}}\n              onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\" >load more</div >\n      </button >\n    </div >\n  )\n}\n\nCharList.prorTypes = {\n  onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect} from 'react';\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMesage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n  const [char, setChar] = useState(null);\n\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar()\n  }, [props.charId])\n\n\n  const updateChar = () => {\n    clearError();\n\n    const {charId} = props;\n    if (!charId) {\n      return;\n    }\n\n    getCharacter(charId)\n      .then(onCharLoaded)\n  }\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const skeleton = char || loading || error ? null : <Skeleton />;\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n  return (\n    <div className=\"char__info\" >\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div >\n  )\n}\n\nconst View = ({char}) => {\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n  let imgStyle = {'objectFit': 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {'objectFit': 'contain'};\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\" >\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div >\n          <div className=\"char__info-name\" >{name}</div >\n          <div className=\"char__btns\" >\n            <a href={homepage} target=\"_blank\" className=\"button button__main\" >\n              <div className=\"inner\" >homepage</div >\n            </a >\n            <a href={wiki} target=\"_blank\" className=\"button button__secondary\" >\n              <div className=\"inner\" >Wiki</div >\n            </a >\n          </div >\n        </div >\n      </div >\n      <div className=\"char__descr\" >\n        {description}\n      </div >\n      <div className=\"char__comics\" >Comics:</div >\n      <ul className=\"char__comics-list\" >\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {\n          comics.slice(0, 10).map((item, i) => {\n            return (\n              <li key={i} className=\"char__comics-item\" >\n                {item.name}\n              </li >\n            )\n          })\n        }\n      </ul >\n    </>\n  )\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo;","import {useState} from 'react';\nimport {Formik, Form, Field, ErrorMessage as FormikErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMesage/ErrorMessage';\n\nimport './charSearchForm.scss';\n\nconst CharSearchForm = () => {\n  const [char, setChar] = useState(null);\n  const {loading, error, getCharacterByName, clearError} = useMarvelService();\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  }\n\n  const updateChar = (name) => {\n    clearError();\n\n    getCharacterByName(name)\n      .then(onCharLoaded);\n  }\n\n  const errorMessage = error ? <div className=\"char__search-critical-error\" ><ErrorMessage /></div > : null;\n  const results = !char ? null : char.length > 0 ?\n    <div className=\"char__search-wrapper\" >\n      <div className=\"char__search-success\" >There is! Visit {char[0].name} page?</div >\n      <Link to={`/Marvel/characters/${char[0].id}`} className=\"button button__secondary\" >\n        <div className=\"inner\" >To page</div >\n      </Link >\n    </div > :\n    <div className=\"char__search-error\" >\n      The character was not found. Check the name and try again\n    </div >;\n\n  return (\n    <div className=\"char__search-form\" >\n      <Formik\n        initialValues={{\n          charName: ''\n        }}\n        validationSchema={Yup.object({\n          charName: Yup.string().required('This field is required')\n        })}\n        onSubmit={({charName}) => {\n          updateChar(charName);\n        }}\n      >\n        <Form >\n          <label className=\"char__search-label\" htmlFor=\"charName\" >Or find a character by name:</label >\n          <div className=\"char__search-wrapper\" >\n            <Field\n              id=\"charName\"\n              name='charName'\n              type='text'\n              placeholder=\"Enter name\" />\n            <button\n              type='submit'\n              className=\"button button__main\"\n              disabled={loading} >\n              <div className=\"inner\" >find</div >\n            </button >\n          </div >\n          <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\n        </Form >\n      </Formik >\n      {results}\n      {errorMessage}\n    </div >\n  )\n}\n\nexport default CharSearchForm;","import {useState} from \"react\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary.js\";\nimport RandomChar from \"../randomChar/RandomChar.js\";\nimport CharList from \"../charList/CharList.js\";\nimport CharInfo from \"../charInfo/CharInfo.js\";\nimport CharSearchForm from \"../charSearchForm/CharSearchForm.js\";\n\nconst MainPage = () => {\n  const [selectedChar, setChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setChar(id);\n  }\n\n  return (\n    <>\n      <ErrorBoundary >\n        <RandomChar />\n      </ErrorBoundary >\n      <div className=\"char__content\" >\n        <ErrorBoundary >\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary >\n        <div >\n          <ErrorBoundary >\n            <CharInfo charId={selectedChar} />\n          </ErrorBoundary >\n          <ErrorBoundary >\n            <CharSearchForm />\n          </ErrorBoundary >\n        </div >\n      </div >\n    </>\n  )\n}\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\n\nimport ErrorMessage from '../errorMesage/ErrorMessage';\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const {loading, error, getAllComics} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n  }\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  }\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i} >\n          <Link to={`/Marvel/comics/${item.id}`} >\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n            <div className=\"comics__item-name\" >{item.title}</div >\n            <div className=\"comics__item-price\" >{item.price}</div >\n          </Link >\n        </li >\n      )\n    })\n\n    return (\n      <ul className=\"comics__grid\" >\n        {items}\n      </ul >\n    )\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\" >\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{'display': comicsEnded ? 'none' : 'block'}}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)} >\n        <div className=\"inner\" >load more</div >\n      </button >\n    </div >\n  )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner.js\";\nimport ComicsList from \"../comicsList/ComicsList.js\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <AppBanner />\n      <ComicsList />\n    </>\n  )\n}\n\nexport default ComicsPage;","import { Link } from 'react-router-dom';\n\nimport './singleComicLayout.scss';\n\nconst SingleComicLayout = ({data}) => {\n\n  const {title, description, pageCount, thumbnail, language, price} = data;\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{title}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pageCount}</p>\n        <p className=\"single-comic__descr\">Language: {language}</p>\n        <div className=\"single-comic__price\">{price}</div>\n      </div>\n      <Link to=\"/Marvel/comics\" className=\"single-comic__back\">Back to all</Link>\n    </div>\n  )\n}\n\nexport default SingleComicLayout;","import './singleCharacterLayout.scss';\n\nconst SingleCharacterLayout = ({data}) => {\n\n  const {name, description, thumbnail} = data;\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={name} className=\"single-comic__char-img\"/>\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{name}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleCharacterLayout;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMesage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SinglePage = ({Component, dataType}) => {\n  const {id} = useParams();\n  const [data, setData] = useState(null);\n  const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateData()\n  }, [id])\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case 'comic':\n        getComic(id).then(onDataLoaded);\n        break;\n      case 'character':\n        getCharacter(id).then(onDataLoaded);\n    }\n  }\n\n  const onDataLoaded = (data) => {\n    setData(data);\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n  return (\n    <>\n      <AppBanner/>\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  )\n}\n\nexport default SinglePage;","import {Link} from \"react-router-dom\";\n\nimport ErrorMessage from \"../errorMesage/ErrorMessage.js\";\n\nconst Page404 = () => {\n  return (\n    <div >\n      <ErrorMessage />\n      <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}} >\n        Page doesn't exist\n      </p >\n      <Link style={{\n        'display': 'block',\n        'textAlign': 'center',\n        'fontWeight': 'bold',\n        'fontSize': '24px',\n        'marginTop': '30px'\n      }} to=\"/Marvel\" >\n        Back to main page\n      </Link >\n    </div >\n  )\n}\n\nexport default Page404;","import {Link, NavLink} from \"react-router-dom\";\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app__header\" >\n      <h1 className=\"app__title\" >\n        <Link to=\"/Marvel\" >\n          <span >Marvel</span > information portal\n        </Link >\n      </h1 >\n      <nav className=\"app__menu\" >\n        <ul >\n          <li >\n            <NavLink\n              end\n              to=\"/Marvel\"\n              style={({isActive}) => ({\n                color: isActive ? '#9F0013' : 'inherit'\n              })}\n            >\n              Characters\n            </NavLink >\n          </li >\n          /\n          <li >\n            <NavLink\n              to=\"/Marvel/comics\"\n              style={({isActive}) => ({\n                color: isActive ? '#9F0013' : 'inherit'\n              })}\n            >\n              Comics\n            </NavLink >\n          </li >\n        </ul >\n      </nav >\n    </header >\n  )\n}\n\nexport default AppHeader;","import {Suspense} from \"react\";\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\nimport {MainPage, ComicsPage, Page404, SingleComicLayout, SingleCharacterLayout, SinglePage} from \"../pages/index.js\"\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport Spinner from '../spinner/Spinner';\n\nconst App = () => {\n\n  return (\n    <Router >\n      <div className=\"app\" >\n        <AppHeader />\n        <main >\n          <Suspense fallback={<Spinner />} >\n            <Routes >\n              <Route path=\"/Marvel\" element={<MainPage />} />\n              <Route path=\"/Marvel/comics\" element={<ComicsPage />} />\n              <Route path=\"/Marvel/comics/:id\" element={\n                <SinglePage Component={SingleComicLayout} dataType='comic' />\n              } />\n              <Route path=\"/Marvel/characters/:id\" element={\n                <SinglePage Component={SingleCharacterLayout} dataType='character' />\n              } />\n              <Route path=\"*\" element={<Page404 />} />\n            </Routes >\n          </Suspense >\n        </main >\n      </div >\n    </Router >\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}